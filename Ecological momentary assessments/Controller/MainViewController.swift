//
//  ViewController.swift
//  Ecological momentary assessments
//
//  Created by MayLuo on 2020/5/4.
//  Copyright Â© 2020 Jing Luo. All rights reserved.
//

import UIKit

class MainViewController: UIViewController, UITextFieldDelegate {
    
    var name = String()
    var age = Int()
    
    let consentForm  = """
This is a psychological research which explores how slowing brearthing moderates memory function. You will be using this app to collect heart rate-related data through phone camera for 6 times, 2 minutes per time.
You will need to follow the experiment instructions on Pavlovia and the Pavlovia links should have been sent to you via email.
The ID code is automatically generated by a Pavlovia link. Researchers will only know this code, never your name. Your heart rate data collected by the camera will only be accessable to ACLab researchers and will not be shared with any third parties.
If you have any questions, please feel free to email us at jl4256@cornell.edu.
If you consent to use this app, please choose "Consent". Otherwise, please exit this app.
"""
    let withdrawNotice = """
    This app can not be used without your consent.
    If you would like to withdraw, please exit the app.
    If you would like to read the consent form again, please choose "OK".
    """
    
    let appDelegate = UIApplication.shared.delegate as! AppDelegate
    
    @IBOutlet weak var nameTextField: UITextField!
    @IBOutlet weak var ageTextField: UITextField!
    
    
    @IBAction func userNameBegin(_ sender: UITextField) {
        print("User name begin")
    }
    
    @IBAction func userNameEnd(_ sender: UITextField) {
        self.name = String(nameTextField.text ?? "404")
        nameTextField.endEditing(true)
        
        //set default name
        let defauls = UserDefaults.standard
        defauls.set(self.name, forKey: UserDefault.id)
    }
    
    @IBAction func ageEditingBegin(_ sender: UITextField) {
        print("age editing begins")
        //ageTextField.keyboardType = UIKeyboardType.numberPad
    }
    
    @IBAction func ageEnd(_ sender: UITextField) {
        self.age = Int(ageTextField.text!) ?? 0
        ageTextField.endEditing(true)
        print("age editing ends")
        
        //set default age
        let defauls = UserDefaults.standard
        defauls.set(self.age, forKey: UserDefault.age)
    }
    
    override func viewDidLoad() {
        super.viewDidLoad()
        self.view.backgroundColor = #colorLiteral(red: 0.2243741453, green: 0.2615192533, blue: 0.4102925658, alpha: 1)
        self.hideKeyboardWhenTappedAround()
        
        //set delegate
        nameTextField.delegate = self
        ageTextField.delegate = self
        
        //get user id and age
        let defaults = UserDefaults.standard
        if let userID = defaults.string(forKey: UserDefault.id) {
            print("user ID: \(userID)") // Some String Value
            nameTextField.text = userID
        }
        if let userAge = defaults.string(forKey: UserDefault.age) {
            ageTextField.text = userAge
        }
        
    }
    
    override func viewDidAppear(_ animated: Bool) {
        if(!appDelegate.hasAlreadyConsented){
            //display user agreement license
            displayConsentForm(message: self.consentForm)
        }
    }
    
    //Display consent form
    func displayConsentForm(message:String){
        //create alert
        let alert = UIAlertController(title: "Consent Form", message: message, preferredStyle: .alert)
        //create Decline button
        let declineAction = UIAlertAction(title: "Withdraw" , style: .destructive, handler: withdrawHandler)
        //create Accept button
        let acceptAction = UIAlertAction(title: "Consent", style: .default, handler: consentHandler)
        //add task to tableview buttons
        alert.addAction(declineAction)
        alert.addAction(acceptAction)
        //while !appDelegate.hasAlreadyConsented {
        self.present(alert, animated: true, completion: nil)
        //}
//        if !appDelegate.hasAlreadyConsented {
//            displayConsentForm(message: self.consentForm)
//        }
    }
    
    func withdrawHandler(alert: UIAlertAction!){
        //Withdraw action
        appDelegate.setNotConsented()
        let consentAlert = UIAlertController(title: "Notice", message: self.withdrawNotice, preferredStyle: .alert)
        let okAction = UIAlertAction(title: "OK", style: .default, handler: okHandler)
        consentAlert.addAction(okAction)
        self.present(consentAlert, animated: true, completion: nil)
    }
    
    func okHandler(alert: UIAlertAction!){
        displayConsentForm(message: self.consentForm)
    }
    
    func consentHandler(alert: UIAlertAction!){
        appDelegate.sethasAlreadyConsented()
    }
    
    
    func textFieldShouldReturn(_ textField: UITextField) -> Bool {
        self.view.endEditing(true)
        return false
    }
    
}

extension UIViewController {
    // Func: dismiss keyboard when tapping outside
    
    func hideKeyboardWhenTappedAround() {
        let tap: UITapGestureRecognizer = UITapGestureRecognizer(target: self, action: #selector(UIViewController.dismissKeyboard))
        tap.cancelsTouchesInView = false
        view.addGestureRecognizer(tap)
    }
    
    @objc func dismissKeyboard() {
        view.endEditing(true)
    }
    
}

